int                     read_event(int fd)
{
  int                   rcvd;
  int                   r;
  int			infd;
  struct sockaddr_in	client_sin;
  socklen_t		client_sin_len;
  Socket                *in_socket;
  std::string           buffer;

  in_socket = NULL;
  rcvd = 0;
  if (fd == this->server_socket.socket_fd)
    {
      this->event.events = EPOLLIN | EPOLLRDHUP;
      client_sin_len = sizeof(client_sin);
      in_socket = this->server_socket.daccept();
      this->event.data.fd = in_socket->socket_fd;
      r = epoll_ctl(this->epoll_fd, EPOLL_CTL_ADD, in_socket->socket_fd, &this->event);
      std::cout << "New client connected " << r << infd << std::endl;
    }
  return (EXIT_SUCCESS);
}

int                     write_event(int fd)
{
  std::cout << "Write event" << std::endl;
  return(0);
}

int			error_event(int fd)
{
  int r;
  r = epoll_ctl (this->epoll_fd, EPOLL_CTL_DEL, fd, &this->event);
    std::cout << "client disconected" << std::endl;
  return (EXIT_SUCCESS);
}
